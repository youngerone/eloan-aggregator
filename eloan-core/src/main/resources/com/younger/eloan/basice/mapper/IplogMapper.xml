<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.younger.eloan.basice.mapper.IplogMapper" >
  <resultMap id="BaseResultMap" type="com.younger.eloan.basice.domain.Iplog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="loginState" property="loginstate" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="loginInfoId" property="logininfoid" jdbcType="BIGINT" />
    <result column="loginType" property="logintype" jdbcType="INTEGER" />
    <result column="loginTime" property="logintime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="base_column">
    id,ip,loginstate,username,logininfoid,logintime
  </sql>
  <sql id="query_where">
    <where>
      <if test="beginDate!=null">
        AND logintime &gt;= #{beginDate}
      </if>

      <if test="endDate!=null">
        AND logintime &lt;= #{endDate}
      </if>

      <if test="state &gt; -1">
        AND loginstate = #{state}
      </if>
      <if test="userName!=null and like">
        AND username like concat('%',#{userName},'%')
      </if>

      <if test="userName!=null and !like">
        AND username = #{userName}
      </if>
    </where>
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `iplog`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.younger.eloan.basice.domain.Iplog" useGeneratedKeys="true" keyProperty="id" >
    insert into `iplog` (ip, loginState, username, 
      loginInfoId, loginType, loginTime
      )
    values (#{ip,jdbcType=VARCHAR}, #{loginstate,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
      #{logininfoid,jdbcType=BIGINT}, #{logintype,jdbcType=INTEGER}, #{logintime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.younger.eloan.basice.domain.Iplog" >
    update `iplog`
    set ip = #{ip,jdbcType=VARCHAR},
      loginState = #{loginstate,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      loginInfoId = #{logininfoid,jdbcType=BIGINT},
      loginType = #{logintype,jdbcType=INTEGER},
      loginTime = #{logintime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, ip, loginState, username, loginInfoId, loginType, loginTime
    from `iplog`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, ip, loginState, username, loginInfoId, loginType, loginTime
    from `iplog`
  </select>

  <select id="queryForCount" resultType="int">
    SELECT COUNT(id) FROM iplog
    <include refid="query_where"/>
  </select>

  <select id="query">
    SELECT
    <include refid="base_column"/>
    FROM iplog
    <include refid="query_where"/>
    ORDER BY
    logintime
    DESC 
    <if test="pageSize&gt;-1">
      LIMIT #{start},#{pageSize}
    </if>
  </select>

</mapper>